20 / 01 / 2019:
Todo:
- Restructure MB section in Dissertation

Notes:
- Light work day. The MB background section needs restructured
  as currently its pretty bad. Also need to look at the review
	from last year; I don't want to repeat too much between the sections

- Moved review to the end of the background as it worked better, allowing
  me to actually explain the concepts in the relevant sections.

Blocked:
Done:
- (Done) MB section restructured and background re-ordered. Happier now but
  its not great. I think Webb will be able to give more succinct feedback and
	I can move onto the CX>

18 / 01 / 2019:
Todo:
- Write an implementation for estimating the focus of expansion.
- Devise a method to move towards the focus of expansion
- Start trying to split the image into the eight regions.
	- This literally just needs to be an X value check on the FOE

Notes:
- The FOE estimation will go in the Util class; pass in the MainActivity object
  which contains the currentFrame and previousFrame (whatever they're actually
	called).
	- Method: Compute matrix A = [ u v ] where V = (u,v) is the flow vector
		associated with pixel P = (x,y). I'm going to need to figure this out again...
		Hooray!
	- Idea; instead of returning the FOE explicitly, you could simply return the
	  zone in which it resides. (image split into eight even zones -
		90/8 = 11.25). How do we split into 11.25px windows??? Likely approximate to
		11px intervals.

- The FOE implementation is written but no testing has been done. The testing
  will likely take a while. Do the old hope test to see if it magically works
	first time (it won't), but the matrix ops are going to be a pain. Really
	triple, quadruple check them at each stage. Key to testing is the matrix size.
	OpenCV types should be correct.

Blocked:
- Test FOE computation
- Devise a method to move towards the focus of expansion
- Start trying to split the image into the eight regions.

Done:
- (Done) FOE implementation written, UNTESTED

17 / 01 / 2019:
Todo:
- Run CX baseline tests (see CXE.txt in this directory)

Notes:
Blocked:
Done:
- (Done) Recordings for CX completed
- (Done) Recordings exported to csv
- (Done) Recordings added to the Repo

#
# Notes from 20/11/18 to 17/01/2019 were kept in a physical journal which is in
# IF G.17; on 17/01/2019 it was decided to revert to the text file format.
#

20 / 11 / 2018:
Notes:
- Code refactor finished
- Auto-calibration finished
- New sensor researched and added.
- Sequential thread... In progress.

The robot functions as it did last year when running the VN thread.
Optic flow mostly works and mushroom body works well, replicating the
learned route. OF implemented on the sequential thread doesn't work,
why? I think I'm dumb, I hope I'm dumb because it'll save a lot of work.
Okay, not dumb in the way I thought but in a different way.

I had originally left out the accumulator for the other side as I was
having issues with the turning (caused by the image problems). I also
had no accumulation resets. The loop counter wasn't ever incremented
and the accumulators weren't reset on each turn. Now seems to be working
but inconsistency still observed. Watch for this. It should be
remembered that the optical flow would occassionally bug out.

We'll immediately switch to using time + speed to measure distance.
Less time faffing. The robot moves one unit each second that it is mobile.
Getting this precise will be tricky, pay attention to where the timers
are started/stopped

On finishing:
Distance computation has been fixed. One unit per second, though for some
very short intervals no time can be recorded (this could be fixed by
allocating 10 units per second perhaps).

Optical flow playing up on final test and generally being a pain.
This may have been to do with the large objects I was using to try and induce
CA responses; I think it more likely that it just isn't working.

Todo:
- Test the older PI threads; make sure the existing CX actually works
  as described in Zhaoyu and Luca's papers (maybe alter the speeds).
- Figure out how to make the CXtheta value useful. Currently it is
  4 or 5 or zero. This is useless considering the robot doesn't turn to
	reset its orientation to be facing homeward. Make sure you're using
	this in the same way that Scimeca and Zhang did. CXtheta is meant
	to be in degrees so it should be directly passable to the turnAround
	function.
- Robot needs charged. 
